
cmake_minimum_required(VERSION 3.1)

set(CORETEST_MAJOR_VERSION 1)
set(CORETEST_MINOR_VERSION 0)
set(CORETEST_PATCH_VERSION 0)
set(CORETEST_VERSION ${CORETEST_MAJOR_VERSION}.${CORETEST_MINOR_VERSION}.${CORETEST_PATCH_VERSION})

enable_testing()

project(coretest VERSION ${CORETEST_VERSION})


set(CORETEST_PROJECT_DIR "${CMAKE_CURRENT_SOURCE_DIR}/..")
set(SG_PROJECT_DIR "${CORETEST_PROJECT_DIR}/..")
set(GOOGLETEST_PROJECT_DIR "${SG_PROJECT_DIR}/googletest")
set(CORE_PROJECT_DIR "${SG_PROJECT_DIR}/core")

include(${SG_PROJECT_DIR}/cmake/common.cmake)
include(${SG_PROJECT_DIR}/cmake/compiler.cmake)

set(SG_BIN_DIR "${SG_PROJECT_DIR}/bin/${SG_TARGET_PLATFORM_NAME}")
set(SG_LIB_DIR "${SG_PROJECT_DIR}/lib/${SG_TARGET_PLATFORM_NAME}")

set_property(GLOBAL PROPERTY USE_FOLDERS ON)

# The project settings

set(CORETEST_HEADER_FILES
    ${CORETEST_PROJECT_DIR}/include/coretest.hpp
    )

set(CORETEST_SOURCE_FILES
    ${CORETEST_PROJECT_DIR}/src/coretest.cpp
    ${CORETEST_PROJECT_DIR}/src/BaseIntegerTest.cpp
    )

source_group("Source Files" FILES ${CORETEST_SOURCE_FILES})
source_group("Header Files" FILES ${CORETEST_HEADER_FILES})

include(${SG_PROJECT_DIR}/cmake/configboost.cmake)
include(${SG_PROJECT_DIR}/googletest/cmake/googletest.cmake)

include_directories(${Boost_INCLUDE_DIR})
include_directories(${GOOGLETEST_INCLUDE_DIR})
include_directories(${CORE_PROJECT_DIR}/include)
include_directories(${CORETEST_PROJECT_DIR}/include)

link_directories(${Boost_LIBRARY_DIR})

add_executable(coretest ${CORETEST_SOURCE_FILES} ${CORETEST_HEADER_FILES})
target_link_libraries(coretest debug core${SG_OUTPUT_SUFFIX}_d optimized core${SG_OUTPUT_SUFFIX}
    ${GOOGLETEST_LIBRARIES} ${Boost_FILESYSTEM_LIBRARY} ${Boost_PROGRAM_OPTIONS_LIBRARY} ${Boost_SYSTEM_LIBRARY})

#if(SG_PLATFORM_LINUX)
#    include(${PDCURSES_PROJECT_DIR}/pdcurses/x11/pdcurses.cmake)
#    target_link_libraries(${LIB_NAME} ${PDCURSES_XLIBS} ${PDCURSES_EXTRA_LIBS})
#endif()

set_target_properties(coretest PROPERTIES
    ARCHIVE_OUTPUT_DIRECTORY ${SG_LIB_DIR}
    ARCHIVE_OUTPUT_DIRECTORY_DEBUG ${SG_LIB_DIR}
    ARCHIVE_OUTPUT_DIRECTORY_RELEASE ${SG_LIB_DIR}
    ARCHIVE_OUTPUT_DIRECTORY_RELWITHDEBINFO ${SG_LIB_DIR}
    ARCHIVE_OUTPUT_DIRECTORY_MINSIZEREL ${SG_LIB_DIR}
    LIBRARY_OUTPUT_DIRECTORY ${SG_BIN_DIR}
    LIBRARY_OUTPUT_DIRECTORY_DEBUG ${SG_BIN_DIR}
    LIBRARY_OUTPUT_DIRECTORY_RELEASE ${SG_BIN_DIR}
    LIBRARY_OUTPUT_DIRECTORY_RELWITHDEBINFO ${SG_BIN_DIR}
    RUNTIME_OUTPUT_DIRECTORY ${SG_BIN_DIR}
    RUNTIME_OUTPUT_DIRECTORY_DEBUG ${SG_BIN_DIR}
    RUNTIME_OUTPUT_DIRECTORY_RELEASE ${SG_BIN_DIR}
    RUNTIME_OUTPUT_DIRECTORY_RELWITHDEBINFO ${SG_BIN_DIR}
    RUNTIME_OUTPUT_DIRECTORY_MINSIZEREL ${SG_BIN_DIR}
    PROJECT_LABEL coretest 
	DEBUG_POSTFIX ${CMAKE_DEBUG_POSTFIX}
    OUTPUT_NAME coretest${SG_OUTPUT_SUFFIX})

add_test(NAME coretest
    COMMAND $<$<CONFIG:Debug>:${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/coretest${SG_OUTPUT_SUFFIX}${CMAKE_DEBUG_POSTFIX}>$<$<CONFIG:Release>:${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/coretest${SG_OUTPUT_SUFFIX}>
    WORKING_DIRECTORY ${SG_BIN_DIR})

